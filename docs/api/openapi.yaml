openapi: 3.0.3
info:
  title: Describe Your API Reference
  version: 1.0.0
  description: |
    API for registering CrowdPM pollution monitoring devices, sending sensor measurements,
    and retrieving measurement data.

servers:
  - url: https://api.crowdpm.com/v1
    description: Production
  - url: http://localhost:3000
    description: Local development

paths:
  /devices/registerDevice:
    post:
      summary: Register a new CrowdPM device
      operationId: registerDevice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDeviceRequest'
      responses:
        '201':
          description: Device successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid request payload

  /devices:
    get:
      summary: List all registered devices
      operationId: listDevices
      responses:
        '200':
          description: A list of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'

  /measurements/sendMeasurement:
    post:
      summary: Send a new sensor measurement
      operationId: sendMeasurement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMeasurementRequest'
      responses:
        '202':
          description: Measurement accepted for processing
        '400':
          description: Invalid payload

  /measurements:
    get:
      summary: Most recent measurement for each device
      description: |
        Returns the latest (most recent) measurement for each device.
        Optionally filter by proximity to a location and limit the number
        of devices returned.
      operationId: getLatestMeasurementsAllDevices
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
          description: Maximum number of devices to return (each with its latest measurement).
        - name: location
          in: query
          required: false
          schema:
            type: string
            pattern: '^[-+]?([1-8]?[0-9](\\.[0-9]+)?|90(\\.0+)?),[-+]?((1[0-7][0-9]|[1-9]?[0-9])(\\.[0-9]+)?|180(\\.0+)?)$'
            example: "37.7749,-122.4194"
          description: >
            Optional center point to filter devices by proximity, formatted "lat,lon".
            Example: "37.7749,-122.4194".
        - name: radiusMeters
          in: query
          required: false
          schema:
            type: number
            format: float
            minimum: 0
            default: 5000
            example: 5000
          description: Optional radial distance from `location` in meters. 
      responses:
        '200':
          description: Latest measurement per device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
        '400':
          description: Invalid query parameters

components:
  schemas:
    UserId:
      type: string
      description: Identifier of the user who owns a device
      example: "1f3b7d2e-88a9-4a9d-9b3e-2b9c9d0b8d21"
    
    DeviceId:
      type: string
      description: Unique Identifier of the device
      example: "b38b6f26-1c2b-4b19-9a2e-fc74e3b50b3d"


    Location:
      type: object
      description: Latitude/Longitude in decimal degrees
      required: [latitude, longitude]
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 37.7749
          description: Decimal degrees north of the equator (-90 to 90).
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: -122.4194
          description: Decimal degrees east of the Prime Meridian (-180 to 180).
  
    
    RegisterDeviceRequest:
      type: object
      required:
        - name
        - type
        - hwmodel
      properties:
        name:
          type: string
          description: "Friendly name to describe the device, not unique, for the device owner to differentiate multiple devices"
          example: "CrowdPM Pollution Sensor - Home"
        hwmodel:
          type: string
          description: "Version of the hardware device sending telemetry"
          example: "v2025.10.31.001"
        location:
          $ref: '#/components/schemas/Location'

    Device:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DeviceId'
        userId:
          $ref: '#/components/schemas/UserId'
        name:
          type: string
          example: "CrowdPM Sensor - Home"
        location:
          $ref: '#/components/schemas/Location'
        registeredAt:
          type: string
          format: date-time
          example: "2025-10-27T18:32:00Z"

    SendMeasurementRequest:
      type: object
      required:
        - deviceId
        - value
        - Location
      properties:
        deviceId:
          $ref: '#/components/schemas/DeviceId'
        value:
          type: number
          format: float
          example: 22.5
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
          format: date-time
          example: "2025-10-27T18:35:00Z"

    Measurement:
      type: object
      properties:
        deviceId:
          $ref: '#/components/schemas/DeviceId'
        value:
          type: number
          format: float
          example: 22.5
        location:
          $ref: '#/components/schemas/Location'
        timestamp:
          type: string
          format: date-time
          example: "2025-10-27T18:35:00Z"